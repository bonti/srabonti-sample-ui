{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport _slicedToArray from \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\srabonti-sample-react-java\\\\srabonti-sample-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\srabonti-sample-react-java\\\\srabonti-sample-ui\\\\src\\\\components\\\\public\\\\login\\\\LoginPage.js\";\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { FormattedMessage } from \"react-intl\";\nimport { withCookies } from \"react-cookie\";\nimport { useIntl } from 'react-intl';\nimport { LockOutlined, UserOutlined } from 'antd/lib/icon';\nimport useApi from '../../../hooks/useApi';\nimport * as PortalConstants from \"../../../utility/constants\";\nimport * as gfunctions from \"../../../utility/generalFunctions\";\nimport './LoginPage.less';\n\nvar LoginPage = function LoginPage(props) {\n  var intl = useIntl();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasLoginError = _useState2[0],\n      setHasLoginError = _useState2[1];\n\n  var _useApi = useApi(\"users\", null, PortalConstants.APIMETHODS.POST),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      authenticateResponse = _useApi2[0],\n      authenticateRequest = _useApi2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var showDashBoard = function showDashBoard(userInfo) {\n    gfunctions.setAuthenticationTokens(userInfo, props.cookies);\n    var authToken = props.cookies.get(PortalConstants.AUTH_TOKEN);\n\n    if (authToken !== undefined && authToken.length > 1) {\n      props.history.push(\"/home/playlists\");\n    }\n  };\n\n  useEffect(function () {//sgfunctions.setAuthenticationTokens(props.userInfo, props.cookies); \n  });\n  useEffect(function () {\n    setLoading(false);\n\n    if (authenticateResponse.data && !authenticateResponse.error && !authenticateResponse.isLoading) {\n      showDashBoard(authenticateResponse.data);\n    } else if (authenticateResponse.error && !authenticateResponse.data && !authenticateResponse.isLoading) {\n      setHasLoginError(true);\n    }\n  }, [authenticateResponse]);\n\n  var handleSubmit = function handleSubmit(values) {\n    var request = {};\n    request.username = values.username;\n    request.password = values.password;\n    setHasLoginError(false);\n    setLoading(true);\n    authenticateRequest(request, PortalConstants.APIMETHODS.POST);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Row, {\n    type: \"flex\",\n    style: {\n      minHeight: 750\n    },\n    justify: \"center\",\n    align: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    sm: 20,\n    md: 16,\n    lg: 12,\n    xl: 8,\n    align: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Spin, {\n    size: \"large\",\n    spinning: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    bordered: false,\n    className: \"loginContainer\",\n    style: {\n      top: \"50%\",\n      minHeight: \"440px\",\n      height: \"auto\",\n      padding: \"10px 20px 0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"To continue, please sign in below\"), /*#__PURE__*/React.createElement(_Form, {\n    onFinish: handleSubmit,\n    className: \"login-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"Rhythm and Melody\"), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    name: \"username\",\n    label: \"Login ID\",\n    rules: [{\n      required: true,\n      message: \"Login is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"inputFieldIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 57\n      }\n    }),\n    type: \"text\",\n    maxLength: 50,\n    placeholder: Passord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(_Row, {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    style: {\n      marginBottom: \"0px\"\n    },\n    name: \"password\",\n    label: gfunctions.showComponentLabels(\"login.labels.password\"),\n    rules: [{\n      required: true,\n      message: \"Password is required.\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    size: \"large\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"inputFieldIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 57\n      }\n    }),\n    type: \"text\",\n    maxLength: 50,\n    placeholder: intl.messages['login.labels.password'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      fontSize: \"14px\",\n      display: \"flex\",\n      color: \"red\",\n      height: \"30px\",\n      marginTop: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, hasLoginError && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Your Login ID or Password was incorrect\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    size: \"large\",\n    style: {\n      width: \"100%\",\n      marginTop: \"0px\"\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, \"Log In\"))))))))));\n};\n\nexport default withCookies(LoginPage);","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/srabonti-sample-react-java/srabonti-sample-ui/src/components/public/login/LoginPage.js"],"names":["React","useEffect","useState","FormattedMessage","withCookies","useIntl","LockOutlined","UserOutlined","useApi","PortalConstants","gfunctions","LoginPage","props","intl","hasLoginError","setHasLoginError","APIMETHODS","POST","authenticateResponse","authenticateRequest","loading","setLoading","useForm","form","showDashBoard","userInfo","setAuthenticationTokens","cookies","authToken","get","AUTH_TOKEN","undefined","length","history","push","data","error","isLoading","handleSubmit","values","request","username","password","minHeight","top","height","padding","fontSize","textAlign","required","message","Passord","marginTop","marginBottom","showComponentLabels","messages","display","color","width"],"mappings":"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","sourcesContent":[" \nimport * as React from 'react';\nimport { useEffect, useState } from 'react'; \nimport { FormattedMessage } from \"react-intl\";\nimport { withCookies } from \"react-cookie\"; \nimport { useIntl } from 'react-intl'; \nimport {LockOutlined, UserOutlined} from 'antd/lib/icon';\nimport { Card, Button, Input, Row, Col, Spin, Form } from \"antd\";\nimport useApi from '../../../hooks/useApi'; \nimport * as PortalConstants from \"../../../utility/constants\";\nimport * as gfunctions from \"../../../utility/generalFunctions\";\nimport './LoginPage.less';\n  \nconst LoginPage =(props)=> {\n\n  const intl = useIntl(); \n   const [hasLoginError, setHasLoginError]  = useState(false);\n   const  [authenticateResponse, authenticateRequest] = useApi(\"users\", null,PortalConstants.APIMETHODS.POST);\n   const [loading, setLoading] = useState(false);\n   const [form] =Form.useForm(); \n\n  const showDashBoard = (userInfo) => {\n    gfunctions.setAuthenticationTokens(userInfo, props.cookies);\n    let authToken =  props.cookies.get(PortalConstants.AUTH_TOKEN);\n    if (authToken !== undefined && authToken.length > 1) {\n      props.history.push(\"/home/playlists\");\n    }\n  }\n\n  useEffect(() => {\n    //sgfunctions.setAuthenticationTokens(props.userInfo, props.cookies); \n  });\n \n\n  useEffect(() => {\n    setLoading(false);\n    if(authenticateResponse.data && !authenticateResponse.error && !authenticateResponse.isLoading){\n      showDashBoard(authenticateResponse.data); \n    }\n    else if(authenticateResponse.error && !authenticateResponse.data && !authenticateResponse.isLoading){\n      setHasLoginError(true);\n    }\n  }, [authenticateResponse]);\n \n  const handleSubmit = (values) => {\n    let request={};\n    request.username=values.username;\n    request.password = values.password;\n    setHasLoginError(false);\n    setLoading(true);\n    authenticateRequest(request, PortalConstants.APIMETHODS.POST); \n  };\n\n  return ( \n    <>\n      <Row\n        type=\"flex\"\n        style={{ minHeight: 750 }}\n        justify=\"center\"\n        align=\"middle\" >\n         \n        <Col xs={24} sm={20} md={16} lg={12} xl={8} align=\"middle\">\n          <Spin  size=\"large\" spinning={loading} >\n            <Card\n              bordered={false}\n              className=\"loginContainer\"\n              style={{\n                top: \"50%\",\n                minHeight: \"440px\",\n                height: \"auto\",\n                padding: \"10px 20px 0px\"\n              }}\n            >\n              <h5 style={{ fontSize: \"24px\", textAlign: \"center\" }}>\n                 To continue, please sign in below\n              </h5>\n              <Form onFinish={handleSubmit} className=\"login-form\"> \n                  <h1 style={{ textAlign: \"center\" }}>\n                      Rhythm and Melody\n                  </h1> \n                <Form.Item>\n                  <Row>\n                    <Col span={24}>\n                    <Form.Item name=\"username\" label=\"Login ID\"\n                            rules={\n                                [{\n                                    required: true,\n                                  \n                                    message: \"Login is required\"\n                                }\n                                ]\n                            }\n                        >\n                            <Input size=\"large\" prefix={<UserOutlined className=\"inputFieldIcon\"></UserOutlined>} type=\"text\" maxLength={50} placeholder={Passord} /> \n                        </Form.Item>\n                     \n                    </Col>\n                  </Row>\n                   \n                  <Row style={{ marginTop: \"10px\" }}>\n                    <Col span={24}>\n                    <Form.Item style={{ marginBottom: \"0px\" }} name=\"password\" label={gfunctions.showComponentLabels(\"login.labels.password\")}\n                            rules={\n                                [{\n                                    required: true,\n                                  \n                                    message: \"Password is required.\"\n                                }\n                                ]\n                            }\n                        >\n                            <Input size=\"large\" prefix={<LockOutlined className=\"inputFieldIcon\"></LockOutlined>} type=\"text\" maxLength={50} placeholder={intl.messages['login.labels.password']} /> \n                        </Form.Item> \n                    </Col>\n                  </Row>\n                 \n                </Form.Item>\n                <>\n                  <h6\n                    style={{\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      color: \"red\",\n                      height: \"30px\",\n                      marginTop: \"5px\"\n                    }}\n                  >\n                    {hasLoginError &&\n                      (\n                        <div style={{ marginTop: \"12px\" }}>\n                          Your Login ID or Password was incorrect\n                            \n                        </div>\n                      )}\n                  </h6>\n                </>\n                <Form.Item>\n                  <Row>\n                    <Col span={24}>\n                      <Button\n                        size=\"large\"\n                        style={{\n                          width: \"100%\",\n                          marginTop:\n                            \"0px\"\n                        }}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                      >\n                        Log In\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n              \n            </Card>\n          </Spin>\n        </Col> \n      </Row>\n   </>    \n  );\n} \n\nexport default withCookies(LoginPage);\n"]},"metadata":{},"sourceType":"module"}