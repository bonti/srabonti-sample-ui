{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\srabonti-sample-react-java\\\\srabonti-sample-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\srabonti-sample-react-java\\\\srabonti-sample-ui\\\\src\\\\components\\\\public\\\\login\\\\LoginPage.js\";\n\nvar LoginPage = function LoginPage(props) {\n  var intl = useIntl();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      customMarginTop = _useState2[0],\n      setCustomMargin = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasLoginError = _useState4[0],\n      setHasLoginError = _useState4[1];\n\n  var _useApi = useApi(\"users\", null, PortalConstants.APIMETHODS.POST),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      authenticateResponse = _useApi2[0],\n      authenticateRequest = _useApi2[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var showDashBoard = function showDashBoard(userInfo) {\n    gfunctions.setAuthenticationTokens(userInfo, props.cookies);\n    var authToken = props.cookies.get(PortalConstants.AUTH_TOKEN);\n\n    if (authToken !== undefined && authToken.length > 1) {\n      props.history.push(\"/home/playlists\");\n    }\n  };\n\n  useEffect(function () {\n    gfunctions.setAuthenticationTokens(props.userInfo, props.cookies);\n  });\n  useEffect(function () {\n    setLoading(false);\n\n    if (authenticateResponse.data && !authenticateResponse.error && !authenticateResponse.isLoading) {\n      showDashBoard(authenticateResponse.data);\n    } else if (authenticateResponse.error && !authenticateResponse.data && !authenticateResponse.isLoading) {\n      setHasLoginError(true);\n    }\n  }, [authenticateResponse]);\n\n  var handleSubmit = function handleSubmit(values) {\n    var request = {};\n    request.username = values.username;\n    request.password = values.password;\n    setHasLoginError(false);\n    setLoading(true);\n    authenticateRequest(request, PortalConstants.APIMETHODS.POST);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    type: \"flex\",\n    style: {\n      minHeight: 750\n    },\n    justify: \"center\",\n    align: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 20,\n    md: 16,\n    lg: 12,\n    xl: 8,\n    align: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    spinning: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bordered: false,\n    className: \"loginContainer\",\n    style: {\n      top: \"50%\",\n      minHeight: \"440px\",\n      height: \"auto\",\n      padding: \"10px 20px 0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: \"24px\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"login.labels.sign_in\" // defaultMessage=\"To continue, please sign in below.\"\n    ,\n    description: \"Login title\",\n    values: {\n      what: \"react-intl\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    onFinish: handleSubmit,\n    className: \"login-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"Rhythm and Melody\"), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"username\",\n    label: gfunctions.showComponentLabels(\"login.labels.login_id\"),\n    rules: [{\n      required: true,\n      message: intl.messages[\"login.labels.missing_login\"]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"inputFieldIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 57\n      }\n    }),\n    type: \"text\",\n    maxLength: 50,\n    placeholder: intl.messages['login.labels.login_id'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"0px\"\n    },\n    name: \"password\",\n    label: gfunctions.showComponentLabels(\"login.labels.password\"),\n    rules: [{\n      required: true,\n      message: intl.messages[\"login.labels.missing_password\"]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"inputFieldIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 57\n      }\n    }),\n    type: \"text\",\n    maxLength: 50,\n    placeholder: intl.messages['login.labels.password'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      fontSize: \"14px\",\n      display: \"flex\",\n      color: \"red\",\n      height: \"30px\",\n      marginTop: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, hasLoginError && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"login.labels.login_failed\",\n    defaultMessage: \"Your Login ID or Password was incorrect\",\n    description: \"Please Enter proper Login Id or Password\",\n    values: {\n      what: \"react-intl\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    style: {\n      width: \"100%\",\n      marginTop: \"0px\"\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"login.labels.login\",\n    defaultMessage: \"Log in\",\n    description: \"Log title\",\n    values: {\n      what: \"react-intl\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  })))))))))));\n};\n\nexport default withCookies(LoginPage);","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/srabonti-sample-react-java/srabonti-sample-ui/src/components/public/login/LoginPage.js"],"names":["LoginPage","props","intl","useIntl","useState","customMarginTop","setCustomMargin","hasLoginError","setHasLoginError","useApi","PortalConstants","APIMETHODS","POST","authenticateResponse","authenticateRequest","loading","setLoading","Form","useForm","form","showDashBoard","userInfo","gfunctions","setAuthenticationTokens","cookies","authToken","get","AUTH_TOKEN","undefined","length","history","push","useEffect","data","error","isLoading","handleSubmit","values","request","username","password","minHeight","top","height","padding","fontSize","textAlign","what","showComponentLabels","required","message","messages","marginTop","marginBottom","display","color","width","withCookies"],"mappings":"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","sourcesContent":["\nconst LoginPage =(props)=> {\n\n  const intl = useIntl();\n \n   const [customMarginTop, setCustomMargin] = useState(false);\n   const [hasLoginError, setHasLoginError]  = useState(false);\n   const  [authenticateResponse, authenticateRequest] = useApi(\"users\", null,PortalConstants.APIMETHODS.POST);\n   const [loading, setLoading] = useState(false);\n   const [form] =Form.useForm();\n    \n  \n\n  const showDashBoard = (userInfo) => {\n    gfunctions.setAuthenticationTokens(userInfo, props.cookies);\n    let authToken =  props.cookies.get(PortalConstants.AUTH_TOKEN);\n    if (authToken !== undefined && authToken.length > 1) {\n      props.history.push(\"/home/playlists\");\n    }\n  }\n\n  useEffect(() => {\n    gfunctions.setAuthenticationTokens(props.userInfo, props.cookies); \n  });\n \n\n  useEffect(() => {\n    setLoading(false);\n    if(authenticateResponse.data && !authenticateResponse.error && !authenticateResponse.isLoading){\n      showDashBoard(authenticateResponse.data); \n    }\n    else if(authenticateResponse.error && !authenticateResponse.data && !authenticateResponse.isLoading){\n      setHasLoginError(true);\n    }\n  }, [authenticateResponse]);\n \n  const handleSubmit = (values) => {\n    let request={};\n    request.username=values.username;\n    request.password = values.password;\n    setHasLoginError(false);\n    setLoading(true);\n    authenticateRequest(request, PortalConstants.APIMETHODS.POST); \n  };\n\n  return ( \n    <>\n      <Row\n        type=\"flex\"\n        style={{ minHeight: 750 }}\n        justify=\"center\"\n        align=\"middle\" >\n        <Col xs={24} sm={20} md={16} lg={12} xl={8} align=\"middle\">\n          <Spin  size=\"large\" spinning={loading}>\n            <Card\n              bordered={false}\n              className=\"loginContainer\"\n              style={{\n                top: \"50%\",\n                minHeight: \"440px\",\n                height: \"auto\",\n                padding: \"10px 20px 0px\"\n              }}\n            >\n              <h5 style={{ fontSize: \"24px\", textAlign: \"center\" }}>\n                <FormattedMessage\n                  id=\"login.labels.sign_in\"\n                  // defaultMessage=\"To continue, please sign in below.\"\n                  description=\"Login title\"\n                  values={{ what: \"react-intl\" }}\n                />\n              </h5>\n              <Form onFinish={handleSubmit} className=\"login-form\"> \n                  <h1 style={{ textAlign: \"center\" }}>\n                      Rhythm and Melody\n                  </h1> \n                <Form.Item>\n                  <Row>\n                    <Col span={24}>\n                    <Form.Item name=\"username\" label={gfunctions.showComponentLabels(\"login.labels.login_id\")}\n                            rules={\n                                [{\n                                    required: true,\n                                  \n                                    message: intl.messages[\"login.labels.missing_login\"]\n                                }\n                                ]\n                            }\n                        >\n                            <Input size=\"large\" prefix={<UserOutlined className=\"inputFieldIcon\"></UserOutlined>} type=\"text\" maxLength={50} placeholder={intl.messages['login.labels.login_id']} /> \n                        </Form.Item>\n                     \n                    </Col>\n                  </Row>\n                   \n                  <Row style={{ marginTop: \"10px\" }}>\n                    <Col span={24}>\n                    <Form.Item style={{ marginBottom: \"0px\" }} name=\"password\" label={gfunctions.showComponentLabels(\"login.labels.password\")}\n                            rules={\n                                [{\n                                    required: true,\n                                  \n                                    message: intl.messages[\"login.labels.missing_password\"]\n                                }\n                                ]\n                            }\n                        >\n                            <Input size=\"large\" prefix={<LockOutlined className=\"inputFieldIcon\"></LockOutlined>} type=\"text\" maxLength={50} placeholder={intl.messages['login.labels.password']} /> \n                        </Form.Item> \n                    </Col>\n                  </Row>\n                 \n                </Form.Item>\n                <>\n                  <h6\n                    style={{\n                      fontSize: \"14px\",\n                      display: \"flex\",\n                      color: \"red\",\n                      height: \"30px\",\n                      marginTop: \"5px\"\n                    }}\n                  >\n                    {hasLoginError &&\n                      (\n                        <div style={{ marginTop: \"12px\" }}>\n                          <FormattedMessage\n                            id=\"login.labels.login_failed\"\n                            defaultMessage=\"Your Login ID or Password was incorrect\"\n                            description=\"Please Enter proper Login Id or Password\"\n                            values={{ what: \"react-intl\" }}\n                          />\n                        </div>\n                      )}\n                  </h6>\n                </>\n                <Form.Item>\n                  <Row>\n                    <Col span={24}>\n                      <Button\n                        size=\"large\"\n                        style={{\n                          width: \"100%\",\n                          marginTop:\n                            \"0px\"\n                        }}\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                      >\n                        <FormattedMessage\n                          id=\"login.labels.login\"\n                          defaultMessage=\"Log in\"\n                          description=\"Log title\"\n                          values={{ what: \"react-intl\" }}\n                        />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form.Item>\n              </Form>\n            </Card>\n          </Spin>\n        </Col>\n      </Row>\n   </>    \n  );\n}\n\n \n\nexport default withCookies(LoginPage);\n"]},"metadata":{},"sourceType":"module"}