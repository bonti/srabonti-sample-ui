{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './../actions/actionTypes';\nimport initialState from './initialState';\nimport clientConfig from './clientConfigReducer';\nimport authentication from './authenticationReducer';\nimport customerReducer from './customerReducer';\nimport searchReducer from './searchReducer';\nimport auditLogReducer from './auditLogReducer';\nimport premiseReducer from './premiseReducer';\nimport prospectReducer from './prospectReducer';\nimport billReducer from './billReducer';\nimport paymentReducer from './paymentReducer';\nimport customerInfoReducer from './customerInfoReducer';\nimport accountInformationReducer from './accountInformationReducer';\nimport billPackageReducer from './billPackageReducer';\nimport logsReducer from './logsReducer';\nimport watchQueueReducer from './watchQueueReducer';\nimport passwordResult from './userSettingsReducer';\nimport paymentVendorReducer from './paymentVendorReducer';\nvar appReducer = combineReducers({\n  clientConfig: clientConfig,\n  authentication: authentication,\n  customerReducer: customerReducer,\n  searchReducer: searchReducer,\n  auditLogReducer: auditLogReducer,\n  premiseReducer: premiseReducer,\n  prospectReducer: prospectReducer,\n  billReducer: billReducer,\n  paymentReducer: paymentReducer,\n  customerInfoReducer: customerInfoReducer,\n  accountInformationReducer: accountInformationReducer,\n  billPackageReducer: billPackageReducer,\n  logsReducer: logsReducer,\n  watchQueueReducer: watchQueueReducer,\n  passwordResult: passwordResult,\n  paymentVendorReducer: paymentVendorReducer\n});\n\nvar rootReducer = function rootReducer(state, action, root) {\n  if (action.type === types.LOGOUT) {\n    var newState = Object.assign({}, initialState, {\n      clientConfig: state.clientConfig\n    });\n    state = newState;\n  }\n\n  return appReducer(state, action, root);\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/srabonti-sample-react-java/srabonti-sample-ui/src/reducers/index.js"],"names":["combineReducers","types","initialState","clientConfig","authentication","customerReducer","searchReducer","auditLogReducer","premiseReducer","prospectReducer","billReducer","paymentReducer","customerInfoReducer","accountInformationReducer","billPackageReducer","logsReducer","watchQueueReducer","passwordResult","paymentVendorReducer","appReducer","rootReducer","state","action","root","type","LOGOUT","newState","Object","assign"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,IAAMC,UAAU,GAAGnB,eAAe,CAAC;AACjCG,EAAAA,YAAY,EAAZA,YADiC;AAEjCC,EAAAA,cAAc,EAAdA,cAFiC;AAGjCC,EAAAA,eAAe,EAAfA,eAHiC;AAIjCC,EAAAA,aAAa,EAAbA,aAJiC;AAKjCC,EAAAA,eAAe,EAAfA,eALiC;AAMjCC,EAAAA,cAAc,EAAdA,cANiC;AAOjCC,EAAAA,eAAe,EAAfA,eAPiC;AAQjCC,EAAAA,WAAW,EAAXA,WARiC;AASjCC,EAAAA,cAAc,EAAdA,cATiC;AAUjCC,EAAAA,mBAAmB,EAAnBA,mBAViC;AAWjCC,EAAAA,yBAAyB,EAAzBA,yBAXiC;AAYjCC,EAAAA,kBAAkB,EAAlBA,kBAZiC;AAajCC,EAAAA,WAAW,EAAXA,WAbiC;AAcjCC,EAAAA,iBAAiB,EAAjBA,iBAdiC;AAejCC,EAAAA,cAAc,EAAdA,cAfiC;AAgBjCC,EAAAA,oBAAoB,EAApBA;AAhBiC,CAAD,CAAlC;;AAmBA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,EAAyB;AAC3C,MAAID,MAAM,CAACE,IAAP,KAAgBvB,KAAK,CAACwB,MAA1B,EAAkC;AAChC,QAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1B,YAAlB,EAAgC;AAC7CC,MAAAA,YAAY,EAAEkB,KAAK,CAAClB;AADyB,KAAhC,CAAf;AAGAkB,IAAAA,KAAK,GAAGK,QAAR;AACD;;AACD,SAAOP,UAAU,CAACE,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,CAAjB;AACD,CARD;;AAUA,eAAeH,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport * as types from './../actions/actionTypes';\nimport initialState from './initialState';\nimport clientConfig from './clientConfigReducer'\nimport authentication from './authenticationReducer'\nimport customerReducer from './customerReducer'\nimport searchReducer from './searchReducer'\nimport auditLogReducer from './auditLogReducer'\nimport premiseReducer from './premiseReducer'\nimport prospectReducer from './prospectReducer'\nimport billReducer from './billReducer'\nimport paymentReducer from './paymentReducer'\nimport customerInfoReducer from './customerInfoReducer'\nimport accountInformationReducer from './accountInformationReducer'\nimport billPackageReducer from './billPackageReducer'\nimport logsReducer from './logsReducer'\nimport watchQueueReducer from './watchQueueReducer'\nimport passwordResult from './userSettingsReducer'\nimport paymentVendorReducer from './paymentVendorReducer'\n\nconst appReducer = combineReducers({\n  clientConfig,\n  authentication,\n  customerReducer,\n  searchReducer,\n  auditLogReducer,\n  premiseReducer,\n  prospectReducer,\n  billReducer,\n  paymentReducer,\n  customerInfoReducer,\n  accountInformationReducer,\n  billPackageReducer,\n  logsReducer,\n  watchQueueReducer,\n  passwordResult,\n  paymentVendorReducer\n});\n\nconst rootReducer = (state, action, root) => {\n  if (action.type === types.LOGOUT) {\n    let newState = Object.assign({}, initialState, {\n      clientConfig: state.clientConfig\n    });\n    state = newState;\n  }\n  return appReducer(state, action, root)\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}