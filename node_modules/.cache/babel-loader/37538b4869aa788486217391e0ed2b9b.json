{"ast":null,"code":"import \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"C:\\\\Users\\\\PIONEER\\\\Documents\\\\projects\\\\srabonti-sample-react-java\\\\srabonti-sample-ui\\\\src\\\\utility\\\\generalFunctions.js\";\nimport { isNullOrUndefined } from \"util\";\nimport React from 'react';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\nimport Currency from 'react-currency-formatter';\nimport * as PortalConstants from './constants';\nexport function showComponentLabels(labelId, defaultMsg, labelDescription) {\n  var columnLabel = null;\n\n  if (labelId) {\n    columnLabel = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: labelId,\n      defaultMessage: defaultMsg,\n      description: labelDescription,\n      values: {\n        what: 'react-intl'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }\n    });\n  }\n\n  return columnLabel;\n}\nexport function showComponentLabelsWithParameter(labelId, defaultMsg, labelDescription, param) {\n  var columnLabel = null;\n\n  if (labelId) {\n    columnLabel = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: labelId,\n      defaultMessage: defaultMsg,\n      description: labelDescription,\n      values: param,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }\n    });\n  }\n\n  return columnLabel;\n} //maxAge is in seconds\n\nexport function SetNewCustomCookie(cookies, currentCookieName, currentCookieValue) {\n  cookies.set(currentCookieName, currentCookieValue, {\n    path: \"/\"\n  });\n}\nexport function removeCustomCookie(cookies, currentCookieName) {\n  cookies.remove(currentCookieName);\n}\nexport function truncate(input, length) {\n  if (input && input.length > length) return input.substring(0, length) + '...';else return input;\n}\nexport function compareArrays(old, changed) {\n  for (var key in old) {\n    if (changed[key] !== old[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function checkIsObjectEmpty(jsonObject) {\n  var isEmpty = Object.keys(jsonObject).length === 0 ? true : false;\n  return isEmpty;\n}\nexport function displayNotification(type, message, description) {\n  var dutation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3;\n\n  _notification[type]({\n    message: message,\n    description: description,\n    duration: dutation\n  });\n}\nexport function setAuthenticationTokens(userInfo, cookies) {\n  if (userInfo !== undefined) {\n    if (userInfo.status === \"BAD REQUEST\" || userInfo.status === 500) {\n      userInfo.errorMessage = \"API level error\";\n    }\n\n    if (userInfo.status === \"BAD REQUEST\" || userInfo.errorMessage !== undefined || userInfo.status === 500) {\n      SetNewCustomCookie(cookies, PortalConstants.INVALID_CREDENTIALS, true);\n      removeCustomCookie(cookies, PortalConstants.AUTH_TOKEN);\n    } else {\n      if (userInfo.token) {\n        SetNewCustomCookie(cookies, PortalConstants.AUTH_TOKEN, userInfo.token.accessToken);\n        removeCustomCookie(cookies, PortalConstants.INVALID_CREDENTIALS);\n      }\n    }\n  }\n}\nexport function formatErrorMessage(s) {\n  var message = s.split(\" \", 1);\n\n  if (isCamelCase(message[0])) {\n    return s.replace(message[0], capitalize(message[0].replace(/([a-zA-Z])(?=[A-Z])/g, '$1 ')));\n  } else {\n    return s;\n  }\n}\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nexport function isCamelCase(s) {\n  return /^[a-z][A-Za-z]*$/.test(s);\n}","map":{"version":3,"sources":["C:/Users/PIONEER/Documents/projects/srabonti-sample-react-java/srabonti-sample-ui/src/utility/generalFunctions.js"],"names":["isNullOrUndefined","React","moment","FormattedMessage","Currency","PortalConstants","showComponentLabels","labelId","defaultMsg","labelDescription","columnLabel","what","showComponentLabelsWithParameter","param","SetNewCustomCookie","cookies","currentCookieName","currentCookieValue","set","path","removeCustomCookie","remove","truncate","input","length","substring","compareArrays","old","changed","key","checkIsObjectEmpty","jsonObject","isEmpty","Object","keys","displayNotification","type","message","description","dutation","duration","setAuthenticationTokens","userInfo","undefined","status","errorMessage","INVALID_CREDENTIALS","AUTH_TOKEN","token","accessToken","formatErrorMessage","s","split","isCamelCase","replace","capitalize","charAt","toUpperCase","slice","test"],"mappings":"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","sourcesContent":["import { isNullOrUndefined } from \"util\";\nimport React from 'react'\nimport moment from 'moment';\nimport { notification } from 'antd';\nimport { FormattedMessage } from 'react-intl'\nimport Currency from 'react-currency-formatter';\nimport * as PortalConstants from './constants';\n\nexport function showComponentLabels(labelId, defaultMsg, labelDescription) {\n  let columnLabel = null;\n  if (labelId) {\n    columnLabel = <FormattedMessage id={labelId} defaultMessage={defaultMsg} description={labelDescription}\n      values={{ what: 'react-intl' }} />;\n  }\n  return columnLabel;\n}\n\nexport function showComponentLabelsWithParameter(labelId, defaultMsg, labelDescription, param) {\n  let columnLabel = null;\n  if (labelId) {\n    columnLabel = <FormattedMessage id={labelId} defaultMessage={defaultMsg} description={labelDescription}\n      values={param} />;\n  }\n  return columnLabel;\n}\n\n//maxAge is in seconds\nexport function SetNewCustomCookie(cookies, currentCookieName, currentCookieValue) {\n  cookies.set(currentCookieName, currentCookieValue, {\n    path: \"/\"\n  })\n}\n export function removeCustomCookie(cookies, currentCookieName) {\n  cookies.remove(currentCookieName)\n}\n \nexport function truncate(input, length) {\n  if (input && input.length > length)\n    return input.substring(0, length) + '...';\n  else\n    return input;\n}\n \n\n \nexport function compareArrays(old, changed) {\n  for (let key in old) {\n    if (changed[key] !== old[key]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function checkIsObjectEmpty(jsonObject) {\n  const isEmpty = Object.keys(jsonObject).length === 0 ? true : false;\n  return isEmpty;\n}\n\n \nexport function displayNotification(type, message, description, dutation = 3) {\n  notification[type]({\n    message: message,\n    description: description,\n    duration: dutation\n  });\n}\n\n  \nexport function setAuthenticationTokens(userInfo, cookies) {\n  if (userInfo !== undefined) {\n    if (userInfo.status === \"BAD REQUEST\" || userInfo.status === 500) {\n      userInfo.errorMessage = \"API level error\";\n    }\n    if (\n      userInfo.status === \"BAD REQUEST\" ||\n      userInfo.errorMessage !== undefined ||\n      userInfo.status === 500\n    ) {\n      SetNewCustomCookie(\n        cookies,\n        PortalConstants.INVALID_CREDENTIALS,\n        true\n      );\n      removeCustomCookie(cookies, PortalConstants.AUTH_TOKEN);\n    } else {\n      if (userInfo.token) {\n        SetNewCustomCookie(\n          cookies,\n          PortalConstants.AUTH_TOKEN,\n          userInfo.token.accessToken\n        );\n        removeCustomCookie(\n          cookies,\n          PortalConstants.INVALID_CREDENTIALS\n        );\n      }\n    }\n  }\n}\n\n export function formatErrorMessage(s) {\n  let message = s.split(\" \", 1);\n  if (isCamelCase(message[0])) {\n    return s.replace(message[0], capitalize(message[0].replace(/([a-zA-Z])(?=[A-Z])/g, '$1 ')));\n  }\n  else {\n    return s;\n  }\n}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nexport function isCamelCase(s) {\n  return /^[a-z][A-Za-z]*$/.test(s);\n}\n\n "]},"metadata":{},"sourceType":"module"}